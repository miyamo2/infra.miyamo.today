AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Env:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - stage
      - prod

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: "10.0.0.0/16"
      Tags:
        - Key: "Environment"
          Value: !Ref Env

  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: { Ref: "AWS::Region" }
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Environment"
          Value: !Ref Env

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Environment"
          Value: !Ref Env

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetOne
      RouteTableId: !Ref PublicRouteTable

  BlogAPIServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ecs service
      VpcId: !Ref VPC
      Tags:
        - Key: "Environment"
          Value: !Ref Env

  BlogAPIServiceSecurityGroupIngreesSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref BlogAPIServiceSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref BlogAPIServiceSecurityGroup

  BlogAPIServiceSecurityGroupEgreesAll:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref BlogAPIServiceSecurityGroup
      IpProtocol: -1
      CidrIp: "0.0.0.0/0"

  ServiceDiscoveryNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: !Sub internal-${Env}
      Vpc: !Ref VPC
      Tags:
        - Key: "Environment"
          Value: !Ref Env

  SSMParameterVpcId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: "Standard"
      Name: !Sub /blog/cicd/${Env}/vpc/id
      Type: "String"
      Value: !Ref VPC
      Tags:
        Environment: !Ref Env

  SSMParameterBlogAPIServiceSecurityGroup:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: "Standard"
      Name: !Sub /blog/cicd/${Env}/ec2/security-group/id
      Type: "String"
      Value: !Ref BlogAPIServiceSecurityGroup
      Tags:
        Environment: !Ref Env

  SSMParameterServiceDiscoveryNamespaceId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: "Standard"
      Name: !Sub /blog/cicd/${Env}/service-discovery/namespace/internal/id
      Type: "String"
      Value: !Ref ServiceDiscoveryNamespace
      Tags:
        Environment: !Ref Env

  SSMParameterServiceDiscoveryNamespaceName:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: "Standard"
      Name: !Sub /blog/cicd/${Env}/service-discovery/namespace/internal/name
      Type: "String"
      Value: !Sub internal-${Env}
      Tags:
        Environment: !Ref Env

  SSMParameterPublicSubnetOneId:
    Type: "AWS::SSM::Parameter"
    Properties:
      Tier: "Standard"
      Name: !Sub /blog/cicd/${Env}/subnet/public/one/id
      Type: "String"
      Value: !Ref PublicSubnetOne
      Tags:
        Environment: !Ref Env
