AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Env:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - stage
      - prod
  VpcId:
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true
    Default: /miyamo-today/cicd/dev/vpc/id
  PublicSubnetOneId:
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true
    Default: /miyamo-today/cicd/dev/subnet/public/one/id
  MiyamoTodayAPIServiceSecurityGroup:
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true
    Default: /miyamo-today/cicd/dev/ec2/security-group/id
  MiyamoTodayAPIServiceDiscoveryServiceArn:
    Type: AWS::SSM::Parameter::Value<String>
    NoEcho: true
    Default: /miyamo-today/cicd/dev/service-discovery/miyamo-today-api/arn

Resources:
  MiyamoTodayAPIAPIGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub miyamo-today-api-api-gateway-${Env}
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowMethods:
          - "GET"
          - "POST"
          - "OPTIONS"
        AllowHeaders:
          - "*"
  MiyamoTodayAPIAPIGatewaySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for API gateway
      VpcId: !Ref VpcId

  MiyamoTodayAPIAPIGatewayVpcLink:
    Type: AWS::ApiGatewayV2::VpcLink
    Properties:
      Name: !Sub miyamo-today-api-${Env}-vpc-link
      SecurityGroupIds:
        - !Ref MiyamoTodayAPIAPIGatewaySecurityGroup
      SubnetIds:
        - !Ref PublicSubnetOneId

  MiyamoTodayAPIAPIGatewayVpcLinkIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref MiyamoTodayAPIAPIGateway
      ConnectionId: !Ref MiyamoTodayAPIAPIGatewayVpcLink
      ConnectionType: VPC_LINK
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref MiyamoTodayAPIServiceDiscoveryServiceArn
      PayloadFormatVersion: 1.0
      IntegrationMethod: ANY
      PassthroughBehavior: WHEN_NO_MATCH

  MiyamoTodayAPIAPIGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref MiyamoTodayAPIAPIGateway
      StageName: "$default"
      AutoDeploy: true
      DefaultRouteSettings:
        DetailedMetricsEnabled: true
      AccessLogSettings:
        DestinationArn: !GetAtt MiyamoTodayAPIAPIGatewayLogGroup.Arn
        Format: >-
          {"requestId":"$context.requestId", "ip": "$context.identity.sourceIp",
          "caller":"$context.identity.caller",
          "user":"$context.identity.user","requestTime":"$context.requestTime",
          "routeKey":"$context.routeKey",
          "status":"$context.status"}

  MiyamoTodayAPIAPIGatewayPOSTProxyPlusRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref MiyamoTodayAPIAPIGateway
      RouteKey: POST /{proxy+}
      Target: !Join
        - /
        - - integrations
          - !Ref MiyamoTodayAPIAPIGatewayVpcLinkIntegration

  MiyamoTodayAPIAPIGatewayGETProxyPlusRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref MiyamoTodayAPIAPIGateway
      RouteKey: GET /{proxy+}
      Target: !Join
        - /
        - - integrations
          - !Ref MiyamoTodayAPIAPIGatewayVpcLinkIntegration

  MiyamoTodayAPIAPIGatewayOPTIONSProxyPlusRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref MiyamoTodayAPIAPIGateway
      RouteKey: OPTIONS /{proxy+}
      Target: !Join
        - /
        - - integrations
          - !Ref MiyamoTodayAPIAPIGatewayVpcLinkIntegration

  MiyamoTodayAPIAPIGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/api-gateway/${MiyamoTodayAPIAPIGateway}"

  MiyamoTodayAPIServiceIngressFromAPIGateway:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref MiyamoTodayAPIServiceSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref MiyamoTodayAPIAPIGatewaySecurityGroup

Outputs:
  MiyamoTodayAPIUri:
    Value: !GetAtt MiyamoTodayAPIAPIGateway.ApiEndpoint
