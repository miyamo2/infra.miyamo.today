name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions: write-all

concurrency:
  group: ${{ github.workflow }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: main

      - name: Set up aws cli
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
          mask-aws-account-id: true

      - id: auth
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4
        with:
          install_components: "gke-gcloud-auth-plugin"

      - name: Get tf.vars
        run: |
          aws s3 cp s3://${{ secrets.TF_ARTIFACTS_BUCKET_NAME }}/vars/tfvars.json ./terraform/tfvars.json

      - name: kubeconfig
        run: |
          gcloud container clusters get-credentials blogapi-cluster --zone=us-west1-c > /dev/null

      - name: Set up terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "1.11.2"
          terraform_wrapper: false
          
      - name: Apply terraform
        env:
          COCKROACH_API_KEY: ${{ secrets.COCKROACH_API_KEY }}
        working-directory: ./terraform
        run: |
          terraform init -backend-config="bucket=${{ secrets.TF_ARTIFACTS_BUCKET_NAME }}" \
            -backend-config="key=state/terraform.tfstate"
          export TF_LOG=ERROR
          export TF_LOG_CORE=ERROR
          export TF_LOG_PROVIDER=ERROR
          terraform apply \
            -var-file=tfvars.json \
            -auto-approve 

      - uses: mscno/setup-goose@4e17bb129272283b31c353e2ece85e00537f17f5 # v1

      - name: Migration for Article DB
        working-directory: ./migration/article
        run: |
          CONNECTION_STRING=$(aws ssm get-parameters --names /miyamo-today/cicd/prod/cockroachdb/dsn/article --output text --query Parameters[0].Value)
          echo "::add-mask::$CONNECTION_STRING"
          export GOOSE_DBSTRING=$CONNECTION_STRING
          export GOOSE_DRIVER=postgres
          goose up -dir ./

      - name: Migration for Tag DB
        working-directory: ./migration/tag
        run: |
          CONNECTION_STRING=$(aws ssm get-parameters --names /miyamo-today/cicd/prod/cockroachdb/dsn/tag --output text --query Parameters[0].Value)
          echo "::add-mask::$CONNECTION_STRING"
          export GOOSE_DBSTRING=$CONNECTION_STRING
          export GOOSE_DRIVER=postgres
          goose up -dir ./
